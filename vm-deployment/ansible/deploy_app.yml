---
- name: Deploy Flask Application with Prometheus Metrics
  hosts: app_servers
  become: yes
  vars:
    app_dir: /opt/monitoring-app
    app_user: app_user
    app_group: app_user
    venv_dir: /opt/monitoring-app/venv

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name: 
          - python3
          - python3-pip
          - python3-venv
          - git
          - software-properties-common
        state: present
        
    - name: Add deadsnakes PPA for Python versions
      apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present
        
    - name: Install Python 3.10
      apt:
        name: python3.10
        state: present
        update_cache: yes
        
    - name: Check Python version
      command: python3 --version
      register: python_version
      changed_when: false
      
    - name: Display Python version
      debug:
        var: python_version.stdout

    - name: Create app user
      user:
        name: "{{ app_user }}"
        comment: "Application user"
        shell: /bin/bash
        system: yes

    - name: Create app directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0755'

    - name: Create templates directory
      file:
        path: "{{ app_dir }}/templates"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0755'
        
    - name: Copy template files
      copy:
        src: "app_files/templates/"
        dest: "{{ app_dir }}/templates/"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0644'

    - name: Copy application files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: "{{ item.mode | default('0644') }}"
      with_items:
        - { src: "app_files/app.py", dest: "{{ app_dir }}/app.py" }
        - { src: "app_files/requirements.txt", dest: "{{ app_dir }}/requirements.txt" }

    - name: Create Python virtual environment
      become_user: "{{ app_user }}"
      command: python3.10 -m venv {{ venv_dir }}
      args:
        creates: "{{ venv_dir }}/bin/python"

    - name: Install Python dependencies
      become_user: "{{ app_user }}"
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ venv_dir }}"
        extra_args: "--no-cache-dir"

    - name: Create systemd service file
      template:
        src: templates/monitoring-app.service.j2
        dest: /etc/systemd/system/monitoring-app.service
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Enable and start monitoring app service
      systemd:
        name: monitoring-app
        state: started
        enabled: yes

    - name: Wait for Flask service to start
      wait_for:
        port: 5000
        timeout: 30
        
    - name: Wait for Prometheus metrics server to start
      wait_for:
        port: 8000
        timeout: 30

    - name: Check if metrics endpoint is available
      uri:
        url: http://localhost:8000
        return_content: yes
        timeout: 30
      register: metrics_response
      ignore_errors: yes
      retries: 3
      delay: 5

    - name: Show service status
      command: systemctl status monitoring-app
      register: service_status
      changed_when: false

    - name: Display service status
      debug:
        var: service_status.stdout_lines
